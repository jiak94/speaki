name: Report Test Coverage
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        poetry-version: [1.2.0]
        python-version: [3.10.7]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.10'
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ matrix.poetry-version }}
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Cache dependencies
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install Dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction --no-root

    - name: Generate coverage report
      env:
        AZURE_KEY: ${{ secrets.AZURE_KEY }}
        AZURE_REGION: ${{ secrets.AZURE_REGION }}
        AZURE_ENDPOINT: ${{ secrets.AZURE_ENDPOINT }}
        AZURE_BLOB_CONNECTION_STRING: ${{ secrets.AZURE_BLOB_CONNECTION_STRING }}
        DB_NAME: test
        DB_USER: root
        DB_PASSWORD: mysql
        DB_HOST: localhost
        DB_PORT: 3306
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      run: |
        make tests

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
