name: Report Test Coverage
on: [push]
jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.10.7]
    env:
      OS: ${{ matrix.os }}
      PYTHON: '3.10'
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: "1.3.2"

    - name: Install Dependencies
      run: |
        poetry install --no-interaction --no-root
    - name: Create .env file
      uses: ozaytsev86/create-env-file@v1
      with:
        ENV_AZURE_SPEECH_KEY: ${{ secrets.AZURE_KEY }}
        ENV_AZURE_SPEECH_REGION: ${{ secrets.AZURE_REGION }}
        ENV_AZURE_SPEECH_ENDPOINT: ${{ secrets.AZURE_ENDPOINT }}
        ENV_AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_BLOB_CONNECTION_STRING }}
        ENV_AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        ENV_AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
        ENV_DB_NAME: test
        ENV_DB_USER: root
        ENV_DB_PASSWORD: mysql
        ENV_MEDIA_PATH: ./media_test
        ENV_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        ENV_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ENV_AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}
    - name: Generate coverage report
      run: poetry run pytest --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
